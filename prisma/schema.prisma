generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url = env("POSTGRES_PRISMA_URL")
  directUrl = env("POSTGRES_URL_NON_POOLING")
}

model User {
  id             String    @id @default(cuid())
  name           String?
  email          String    @unique
  emailVerified  DateTime?
  image          String?
  classId        String?
  subject        Subject?  @default(MATH)
  role           Role      @default(STUDENT)
  accounts       Account[]
  sessions       Session[]
  assignedGrades Grade[]   @relation("teacher")
  grades         Grade[]   @relation("student")

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  class Class? @relation(fields: [classId], references: [id])
}

model Account {
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@id([provider, providerAccountId])
}

model Session {
  sessionToken String   @unique
  userId       String
  expires      DateTime

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model VerificationToken {
  identifier String
  token      String
  expires    DateTime

  @@id([identifier, token])
}

model Class {
  id       String   @id @default(cuid())
  name     String
  teachers String[]
  students User[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Grade {
  id        String  @id @default(cuid())
  value     Float
  userId    String
  teacherId String
  subject   Subject

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  teacher User  @relation("teacher", fields: [teacherId], references: [id], onDelete: Cascade)
  user    User  @relation("student", fields: [userId], references: [id], onDelete: Cascade)
}

enum Role {
  ADMIN
  TEACHER
  STUDENT
}

enum Subject {
  MATH
  SCIENCE
  HISTORY
  ENGLISH
  IT
}
