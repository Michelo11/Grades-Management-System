generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String    @unique
  emailVerified DateTime?
  image         String?
  classId       String?
  role          Roles     @default(STUDENT)
  accounts      Account[]
  sessions      Session[]
  grades        Grade[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  class Class? @relation(fields: [classId], references: [id])
}

model Account {
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@id([provider, providerAccountId])
}

model Session {
  sessionToken String   @unique
  userId       String
  expires      DateTime

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model VerificationToken {
  identifier String
  token      String
  expires    DateTime

  @@id([identifier, token])
}

model Class {
  id       String   @id @default(cuid())
  name     String
  teachers String[]
  grades   Grade[]
  students User[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Grade {
  id      String   @id @default(cuid())
  value   Float
  userId  String
  classId String
  subject Subjects

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user  User  @relation(fields: [userId], references: [id], onDelete: Cascade)
  class Class @relation(fields: [classId], references: [id], onDelete: Cascade)
}

enum Roles {
  ADMIN
  TEACHER
  STUDENT
}

enum Subjects {
  MATH
  SCIENCE
  HISTORY
  ENGLISH
  IT
}
